# Library {#Library}

+ [Original discussion on PairProgramming in C2](http://c2.com/cgi/wiki?PairProgramming), C2
+ [You will never work alone again](http://www.slideshare.net/nashjain/pair-programming), Naresh Jain
+ [Promiscuous Pairing and Beginners Mind](http://www.mitchlacey.com/docs/XR4PromiscuousPairingandBeginnersMind.pdf), Mitch Lacey
+ [All I Really Need to Know about Pair Programming I Learned In Kindergarten](http://collaboration.csc.ncsu.edu/laurie/Papers/Kindergarten.PDF), Laurie A Williams
+ [Pomodoro Technique](http://www.pomodorotechnique.com/), Francesco Cirillo
+ [The Core Protocols]( http://alturl.com/b9fn), Jim & Michele McCarthy
+ [The Costs and Benefits of Pair Programming](http://collaboration.csc.ncsu.edu/laurie/Papers/XPSardinia.PDF), Laurie Williams & Alistair Cockburn
+ [Strengthening the Case for Pair-Programming](http://collaboration.csc.ncsu.edu/laurie/Papers/ieeeSoftware.PDF), Laurie Williams, Robert R. Kessler, Ward Cunningham & Ron Jeffries
+ [On the Economic Feasibility of Pair Programming](https://pdfs.semanticscholar.org/3918/81acebcf21072364316b812617c06140f67f.pdf), Hakan Erdogmus & Laurie Williams
+ [Pair Programming and expertise](http://salfreudenberg.wordpress.com/2013/06/08/pair-programming-and-expertise/), Sal Freudenberg
+ [Pair Programming uptake and Peripheral Awareness](http://salfreudenberg.wordpress.com/2013/06/15/pair-programming-uptake-and-peripheral-awareness/), Sal Freudenberg
+ [Pair programming: pluses and minuses, bonuses and anti-patterns](http://altabel.wordpress.com/2013/05/24/pair-programming-pluses-and-minuses-bonuses-and-anti-patterns/), Nadya Klim
+ [How to Piss off your pair](http://c2.com/cgi/wiki?HowToPissOffYourPair), The internet
+ [Pair programming Anti Patterns](https://www.youtube.com/watch?v=ReuFZYtGeCc), Naresh Jain, JB Rainsberger
+ [Pair Staircase](http://agilefaqs.com/pair-stairs.html)
+ [Pair programming illuminated](https://www.amazon.com/Pair-Programming-Illuminated-Laurie-Williams/dp/0201745763), Williams, Kessler
+ [Rethinking Pair-Programming](https://www.voxxed.com/blog/2015/10/rethinking-pair-programming/), Sandro Mancuso
+ [Does PairProgramming work](https://davenicolette.wordpress.com/2013/07/06/does-pair-programming-work/ ), Dave Nicolette
+ [Experimental Evaluation of Pair Programming](https://www.researchgate.net/publication/2531047_Experimental_Evaluation_of_Pair_Programming), Nawrocki/Wojciechowski 2001 
+ [So how good is pair programming, really?](https://raygun.com/blog/2015/11/how-good-is-pair-programming-really/), Rickard Dahlstrom
+ [Pair Programming Benefits - Two Heads Are Better than One](https://pragprog.com/magazines/2011-07/pair-programming-benefits), Jeff Langr & Tim Ottinger (Shorter reading, good for showing to management)
+ [The Case for Collaborative Programming](https://www.researchgate.net/profile/John_Nosek/publication/27295641_The_Case_for_Collaborative_Programming/links/54a818df0cf257a6360bdc1b.pdf), Nosek 1998
+ [Pair programming in teams with diverse skill and experience levels](https://medium.com/learning-teaching-pairing) multiple authors
+ [Roles in Pair-Programming Across Skill: Leader/Adopter Model](https://medium.com/learning-teaching-pairing/roles-in-pair-programming-across-skill-leader-adopter-model-2e2b9a15fcfb), Irena 2017 
+ [Root causes of friction in pairs: Expert Induced Amnesia](https://medium.com/learning-teaching-pairing/root-causes-of-friction-in-pairs-expert-induced-amnesia-6cc80aee0d4d), Irena 2017 
+ [The needs aspects of Pair Programming](https://medium.com/learning-teaching-pairing/the-needs-aspect-of-pair-programming-702777fc1ec1), Irena 2017
+ [Remote Pair Programming](http://sedano.org/toddsedano/2016/11/07/remote-pair-programming.html), Todd Sedano
+ [Considerate Pair Programming - Part 1](http://sedano.org/toddsedano/2017/10/24/considerate-pair-programming.html)
+ [Considerate Pair Programming - Part 2](http://sedano.org/toddsedano/2017/10/23/considerate-pair-programming.html)
+ [Considerate Pair Programming - Part 3](http://sedano.org/toddsedano/2017/10/22/considerate-pair-programming.html)
+ [How to pair effectively in 6 steps](https://gds.blog.gov.uk/2018/02/06/how-to-pair-program-effectively-in-6-steps/)
+ [Llewellyn’s strong-style pairing](http://llewellynfalco.blogspot.be/2014/06/llewellyns-strong-style-pairing.html)
+ [Pair Programming: Taking turns with your pair](https://medium.com/@marlenac/pair-programming-taking-turns-with-your-pair-32fc344d62b9)
+ [The Three Pairs of Pair Programming](https://medium.com/@cdkirkwood_43513/the-three-pairs-of-pair-programing-f8be9972b67)
+ [The powerdynamics in PairProgramming - Twitter thread](https://twitter.com/sarahmei/status/991001357455835136)
+ [Power dynamics in pairs and mobs](http://visible-quality.blogspot.be/2018/05/power-dynamics-in-pairs-and-mobs.html)
+ [letspair](https://www.kickstarter.com/projects/marlenac/lets-pair) A set of zines about pair programming, an artsy print of a framework to help you get going & a plushy pear to be your pairing patronus.
+ [Pair Programming – The Most Extreme XP Practice?](http://www.davefarley.net/?p=214) from Dave Farley
+ [Our First Experiment with Promiscuous Pairing Is a Success](https://engineering.itpro.tv/2018/12/07/our-first-experiment-with-promiscuous-pairing-is-a-success/) 
+ [Pair Programming May Lower Barriers to Women in Tech](https://code.likeagirl.io/pair-programming-may-lower-barriers-to-women-in-tech-f6e5b10517b)
+ [The ‘Tag Team’: Tools, tasks and roles in collaborative software development](https://ethos.bl.uk/OrderDetails.do?uin=uk.bl.ethos.436393) Thesis from Sallyann Freudenberg at University Of Sussex


## Great books "every" developer should read

+ [About Face](http://www.amazon.com/About-Face-Essentials-Interaction-Design-ebook/dp/B00MFPZ9UY/), Alan Cooper
+ [Agile Retrospectives](https://www.amazon.com/Agile-Retrospectives-Making-Pragmatic-Programmers-ebook/dp/B00B03SRJW), Esther Derby, Diana Larsen
+ [Agile Software Development, Principles, Patterns, and Practices](http://www.amazon.com/dp/0135974445), Robert C. Martin
+ [Beautiful Code](http://www.amazon.com/Beautiful-Code-Leading-Programmers-Practice-ebook/dp/B0026OR2NG), Andy Oram
+ [Beautiful Architecture: Leading Thinkers Reveal the Hidden Beauty in Software Design](http://www.amazon.com/Beautiful-Architecture-Leading-Thinkers-Software-ebook/dp/B0043GXMRA/), Diomidis Spinellis
+ [Cathedral and the Bazaar, the](http://www.amazon.com/Cathedral-Bazaar-Musings-Accidental-Revolutionary-ebook/dp/B0026OR3LM/), Eric S Raymond
+ [Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM/), Robert C. Martin
+ [Clean Coder](https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers-ebook/dp/B0050JLC9Y), Robert C. Martin
+ [Code Complete](https://www.amazon.com/Code-Complete-Developer-Best-Practices-ebook/dp/B00JDMPOSY), Steve McConnel
+ [Crucial Conversations](https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second-ebook/dp/B005K0AYH4/), Kerry Patterson, Joseph Grenny, Ron McMillan, Al Switzler 
+ [Death March](https://www.amazon.com/Death-March-2nd-Edward-Yourdon/dp/013143635X), Yourdon
+ [Design of everyday things, the](https://www.amazon.com/Design-Everyday-Things-Revised-Expanded-ebook/dp/B00E257T6C), Donald A Norman
+ [Dynamics of software development](https://www.amazon.com/Dynamics-Software-Development-Pro-Best-Practices/dp/0735623198), Jim McCarthy
+ [Extreme programming explained](https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0201616416/), Kent Beck
+ [Goal, the ](https://www.amazon.com/Goal-Process-Ongoing-Improvement-ebook/dp/B002LHRM2O), Goldratt
+ [How buildings learn](https://www.amazon.com/How-Buildings-Learn-Happens-Theyre-ebook/dp/B00AFZ3PI4/), Steward Brand
+ [Implementing lean software development](https://www.amazon.com/Implementing-Lean-Software-Development-Addison-Wesley-ebook/dp/B00HNB3VQE/), Poppendieck
+ [Lean In](https://www.amazon.com/Lean-Women-Work-Will-Lead-ebook/dp/B00BBA6FOI/), Sheryl Sandberg
+ [Mythical man month, the](https://www.amazon.com/Mythical-Man-Month-Anniversary-Software-Engineering-ebook/dp/B00B8USS14), Brooks
+ [Object Thinking](https://www.amazon.com/Object-Thinking-Developer-Reference-David-ebook/dp/B00JDMPOKM), David West
+ [Peopelware](https://www.amazon.com/gp/product/B00DY5A8X2/), De Marco & Lister
+ [Pragmatic Programmer, the](https://www.amazon.com/gp/product/B003GCTQAE/), Hunt, Thomas
+ [Psychology of computer programming, the](https://www.amazon.com/Psychology-Computer-Programming-Silver-Anniversary-ebook/dp/B004R9QACC), Jerry Weinberg
+ [Rapid Development](https://www.amazon.com/Rapid-Development-Developer-Best-Practices-ebook/dp/B00JDMPOB6/), Steve McConnel
+ [Seven habits of effective people, the](https://www.amazon.com/Habits-Highly-Effective-People-Powerful-ebook/dp/B00GOZV3TM/), Stephan Covey
+ [Slack](http://www.amazon.com/Slack-Getting-Burnout-Busywork-Efficiency-ebook/dp/B004SOVC2Y), Tom De marco
+ [Timeless way of Building, the](https://www.amazon.com/Timeless-Way-Building-Christopher-Alexander/dp/0195024028/), Alexander
+ [Toyota way, the](https://www.amazon.com/Toyota-Way-Management-Principles-Manufacturer/dp/0071392319), Jeffrey Liker
+ [Turning the Ship around](https://www.amazon.com/Turn-Ship-Around-Turning-Followers-ebook/dp/B00AFPVP0Y), David Marquet
+ [Working effectivly with legacy code](https://www.amazon.com/Working-Effectively-Legacy-Robert-Martin-ebook/dp/B005OYHF0A/), Michael C. Feathers
+ [Writing Solid Code](https://www.amazon.com/Writing-Solid-Code-20th-Anniversary/dp/1570740550/), Steve Maguire

